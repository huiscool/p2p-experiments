// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: DataSearchMessage.proto

package pubsub_pb

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_REQUEST  MessageType = 0
	MessageType_RESPONSE MessageType = 1
)

var MessageType_name = map[int32]string{
	0: "REQUEST",
	1: "RESPONSE",
}

var MessageType_value = map[string]int32{
	"REQUEST":  0,
	"RESPONSE": 1,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2e02ee8b19f1b7ce, []int{0}
}

type TransferMessage struct {
	Type                 *MessageType     `protobuf:"varint,1,req,name=type,enum=pubsub.pb.MessageType" json:"type,omitempty"`
	QMsg                 *QueryMessage    `protobuf:"bytes,2,opt,name=qMsg" json:"qMsg,omitempty"`
	RMsg                 *ResponseMessage `protobuf:"bytes,3,opt,name=rMsg" json:"rMsg,omitempty"`
	InnerId              *string          `protobuf:"bytes,4,opt,name=inner_id,json=innerId" json:"inner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TransferMessage) Reset()         { *m = TransferMessage{} }
func (m *TransferMessage) String() string { return proto.CompactTextString(m) }
func (*TransferMessage) ProtoMessage()    {}
func (*TransferMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e02ee8b19f1b7ce, []int{0}
}
func (m *TransferMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TransferMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TransferMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TransferMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferMessage.Merge(m, src)
}
func (m *TransferMessage) XXX_Size() int {
	return m.Size()
}
func (m *TransferMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TransferMessage proto.InternalMessageInfo

func (m *TransferMessage) GetType() MessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MessageType_REQUEST
}

func (m *TransferMessage) GetQMsg() *QueryMessage {
	if m != nil {
		return m.QMsg
	}
	return nil
}

func (m *TransferMessage) GetRMsg() *ResponseMessage {
	if m != nil {
		return m.RMsg
	}
	return nil
}

func (m *TransferMessage) GetInnerId() string {
	if m != nil && m.InnerId != nil {
		return *m.InnerId
	}
	return ""
}

type QueryMessage struct {
	Steps                *int32   `protobuf:"varint,1,req,name=steps,def=0" json:"steps,omitempty"`
	Request              []byte   `protobuf:"bytes,2,req,name=request" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryMessage) Reset()         { *m = QueryMessage{} }
func (m *QueryMessage) String() string { return proto.CompactTextString(m) }
func (*QueryMessage) ProtoMessage()    {}
func (*QueryMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e02ee8b19f1b7ce, []int{1}
}
func (m *QueryMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryMessage.Merge(m, src)
}
func (m *QueryMessage) XXX_Size() int {
	return m.Size()
}
func (m *QueryMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryMessage.DiscardUnknown(m)
}

var xxx_messageInfo_QueryMessage proto.InternalMessageInfo

const Default_QueryMessage_Steps int32 = 0

func (m *QueryMessage) GetSteps() int32 {
	if m != nil && m.Steps != nil {
		return *m.Steps
	}
	return Default_QueryMessage_Steps
}

func (m *QueryMessage) GetRequest() []byte {
	if m != nil {
		return m.Request
	}
	return nil
}

type ResponseMessage struct {
	RequestID            *string  `protobuf:"bytes,1,req,name=requestID" json:"requestID,omitempty"`
	Response             []byte   `protobuf:"bytes,2,req,name=response" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseMessage) Reset()         { *m = ResponseMessage{} }
func (m *ResponseMessage) String() string { return proto.CompactTextString(m) }
func (*ResponseMessage) ProtoMessage()    {}
func (*ResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e02ee8b19f1b7ce, []int{2}
}
func (m *ResponseMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResponseMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseMessage.Merge(m, src)
}
func (m *ResponseMessage) XXX_Size() int {
	return m.Size()
}
func (m *ResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseMessage proto.InternalMessageInfo

func (m *ResponseMessage) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *ResponseMessage) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterEnum("pubsub.pb.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*TransferMessage)(nil), "pubsub.pb.TransferMessage")
	proto.RegisterType((*QueryMessage)(nil), "pubsub.pb.QueryMessage")
	proto.RegisterType((*ResponseMessage)(nil), "pubsub.pb.ResponseMessage")
}

func init() { proto.RegisterFile("DataSearchMessage.proto", fileDescriptor_2e02ee8b19f1b7ce) }

var fileDescriptor_2e02ee8b19f1b7ce = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xd0, 0xc1, 0x4e, 0xab, 0x40,
	0x14, 0x06, 0xe0, 0x3b, 0x5c, 0x9a, 0x96, 0x53, 0x62, 0x9b, 0x59, 0x08, 0x36, 0x86, 0x10, 0x56,
	0xa4, 0x26, 0xc4, 0x74, 0xe9, 0x4e, 0x53, 0x16, 0x8d, 0xa9, 0xda, 0x01, 0xd7, 0x06, 0xec, 0xb1,
	0x76, 0x03, 0xd3, 0x19, 0x58, 0xf0, 0x60, 0xbe, 0x83, 0x4b, 0x1f, 0xc1, 0xf0, 0x24, 0xa6, 0xe3,
	0x88, 0xc4, 0xe5, 0x3f, 0xf3, 0x9d, 0xf3, 0x4f, 0x06, 0x9c, 0x65, 0x56, 0x65, 0x09, 0x66, 0xe2,
	0xf9, 0x75, 0x8d, 0x52, 0x66, 0x3b, 0x8c, 0xb8, 0x28, 0xab, 0x92, 0x5a, 0xbc, 0xce, 0x65, 0x9d,
	0x47, 0x3c, 0x0f, 0xde, 0x08, 0x4c, 0x52, 0x91, 0x15, 0xf2, 0x05, 0x85, 0x46, 0x74, 0x0e, 0x66,
	0xd5, 0x70, 0x74, 0x89, 0x6f, 0x84, 0x27, 0x8b, 0xd3, 0xa8, 0xd3, 0x91, 0x16, 0x69, 0xc3, 0x91,
	0x29, 0x43, 0x2f, 0xc0, 0x3c, 0xac, 0xe5, 0xce, 0x35, 0x7c, 0x12, 0x8e, 0x17, 0x4e, 0xcf, 0x6e,
	0x6a, 0x14, 0x8d, 0x1e, 0x60, 0x0a, 0xd1, 0x08, 0x4c, 0x71, 0xc4, 0xff, 0x15, 0x9e, 0xf5, 0x30,
	0x43, 0xc9, 0xcb, 0x42, 0x62, 0xe7, 0x8f, 0x8e, 0x9e, 0xc1, 0x68, 0x5f, 0x14, 0x28, 0x9e, 0xf6,
	0x5b, 0xd7, 0xf4, 0x49, 0x68, 0xb1, 0xa1, 0xca, 0xab, 0x6d, 0x70, 0x0d, 0x76, 0xbf, 0x80, 0x3a,
	0x30, 0x90, 0x15, 0x72, 0xa9, 0x1e, 0x3d, 0xb8, 0x22, 0x97, 0xec, 0x3b, 0x53, 0x17, 0x86, 0x02,
	0x0f, 0x35, 0xca, 0xca, 0x35, 0x7c, 0x23, 0xb4, 0xd9, 0x4f, 0x0c, 0x6e, 0x61, 0xf2, 0xa7, 0x96,
	0x9e, 0x83, 0xa5, 0x6f, 0x57, 0x4b, 0xb5, 0xc9, 0x62, 0xbf, 0x07, 0x74, 0x06, 0x23, 0xa1, 0x07,
	0xf4, 0xae, 0x2e, 0xcf, 0x43, 0x18, 0xf7, 0x3e, 0x87, 0x8e, 0x61, 0xc8, 0xe2, 0xcd, 0x63, 0x9c,
	0xa4, 0xd3, 0x7f, 0xd4, 0x86, 0x11, 0x8b, 0x93, 0x87, 0xfb, 0xbb, 0x24, 0x9e, 0x92, 0x1b, 0xfb,
	0xbd, 0xf5, 0xc8, 0x47, 0xeb, 0x91, 0xcf, 0xd6, 0x23, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7b,
	0xe0, 0xe4, 0x38, 0xa4, 0x01, 0x00, 0x00,
}

func (m *TransferMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TransferMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("type")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintDataSearchMessage(dAtA, i, uint64(*m.Type))
	}
	if m.QMsg != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintDataSearchMessage(dAtA, i, uint64(m.QMsg.Size()))
		n1, err := m.QMsg.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.RMsg != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintDataSearchMessage(dAtA, i, uint64(m.RMsg.Size()))
		n2, err := m.RMsg.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.InnerId != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintDataSearchMessage(dAtA, i, uint64(len(*m.InnerId)))
		i += copy(dAtA[i:], *m.InnerId)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *QueryMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Steps == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("steps")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintDataSearchMessage(dAtA, i, uint64(*m.Steps))
	}
	if m.Request == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("request")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintDataSearchMessage(dAtA, i, uint64(len(m.Request)))
		i += copy(dAtA[i:], m.Request)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ResponseMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResponseMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RequestID == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("requestID")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintDataSearchMessage(dAtA, i, uint64(len(*m.RequestID)))
		i += copy(dAtA[i:], *m.RequestID)
	}
	if m.Response == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("response")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintDataSearchMessage(dAtA, i, uint64(len(m.Response)))
		i += copy(dAtA[i:], m.Response)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintDataSearchMessage(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *TransferMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 1 + sovDataSearchMessage(uint64(*m.Type))
	}
	if m.QMsg != nil {
		l = m.QMsg.Size()
		n += 1 + l + sovDataSearchMessage(uint64(l))
	}
	if m.RMsg != nil {
		l = m.RMsg.Size()
		n += 1 + l + sovDataSearchMessage(uint64(l))
	}
	if m.InnerId != nil {
		l = len(*m.InnerId)
		n += 1 + l + sovDataSearchMessage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QueryMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Steps != nil {
		n += 1 + sovDataSearchMessage(uint64(*m.Steps))
	}
	if m.Request != nil {
		l = len(m.Request)
		n += 1 + l + sovDataSearchMessage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResponseMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestID != nil {
		l = len(*m.RequestID)
		n += 1 + l + sovDataSearchMessage(uint64(l))
	}
	if m.Response != nil {
		l = len(m.Response)
		n += 1 + l + sovDataSearchMessage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDataSearchMessage(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozDataSearchMessage(x uint64) (n int) {
	return sovDataSearchMessage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TransferMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataSearchMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TransferMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TransferMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v MessageType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataSearchMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= MessageType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataSearchMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.QMsg == nil {
				m.QMsg = &QueryMessage{}
			}
			if err := m.QMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RMsg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataSearchMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RMsg == nil {
				m.RMsg = &ResponseMessage{}
			}
			if err := m.RMsg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InnerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataSearchMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InnerId = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDataSearchMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("type")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataSearchMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Steps", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataSearchMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Steps = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Request", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataSearchMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Request = append(m.Request[:0], dAtA[iNdEx:postIndex]...)
			if m.Request == nil {
				m.Request = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipDataSearchMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("steps")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("request")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResponseMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDataSearchMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResponseMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResponseMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataSearchMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RequestID = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Response", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDataSearchMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Response = append(m.Response[:0], dAtA[iNdEx:postIndex]...)
			if m.Response == nil {
				m.Response = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipDataSearchMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDataSearchMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("requestID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("response")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDataSearchMessage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDataSearchMessage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDataSearchMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDataSearchMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDataSearchMessage
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthDataSearchMessage
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowDataSearchMessage
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipDataSearchMessage(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthDataSearchMessage
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthDataSearchMessage = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDataSearchMessage   = fmt.Errorf("proto: integer overflow")
)
